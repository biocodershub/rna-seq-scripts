label: ${label}
working_dir: ${working_dir}

# Each section below represents a step in an RNA-seq pipeline.  Each step specifies:
# name: the name of the step, for identification purposes
# description: A slightly longer description of the step
# exe: the script or program that executes the step
# interpreter: for scripts, the interpreter needed (eg perl, python, etc)
# args: static args to the step
# inputs: a list of input files needed by the step
# outputs: a list of output files generated by the step
# cmd_order: if the command needed to by the step has a different format than the standard command, this value is substituted.  
#            each item in the lists corresponds to another value defined in the step (eg 'label' in step 'rds')
# Note: this file may be replaced with a database in the future

export2fasta:
  name: export2fasta
  description: convert export to fastq
  exe: ${script_dir}/fq_all2std.pl
  interpreter: ${bin_dir}/perl
  args: ['solexa2fastq']
  inputs: ["${export_dir}/${export_file}"]
  outputs: ["${working_dir}/${export_file}.faq"]

align:
  name: alignment
  description: alignmen the reads to the ref. geneome (using bowtie)
  exe: ${rnaseq_dir}/bowtie/bowtie
  args: ['${bowtie_index}', '-k', '11', '--best', '-n', '1']
  inputs: ["get(['export2fasta']['outputs'][0])"]
  outputs: ["get(['export2fasta']['outputs'][0]).bowtie"]

rds:
  name: make_rds
  description: create an rds-formatted database needed by erange; identifies reads as uniq, multi, or splice
  interpreter: ${bin_dir}/python
  exe: ${rnaseq_dir}/commoncode/makerdsfrombowtie.py
  args: ['-forceRNA', '-index', '-cache', '1000', '-rawreadID', '-RNA', "${genomes_dir}/${org}/knownGene.txt" ]
  inputs: ["get(['align']['outputs'][0])"]
  outputs: ["${working_dir}/${export_file}.rds"]
  label: ${label}
  cmd_order: ['interpreter', 'exe', 'label', 'inputs', 'outputs', 'args']

erange:
  name: erange
  description: calculate the gene->expression mapping for the sample
  interpreter: sh
  exe: ${rnaseq_dir}/commoncode/runStandardAnalysisNFS.sh
  org: [${org}]
  args: ["${genomes_dir}/${org}/repeats_mask.db","5000"]
  inputs: ["get(['rds']['outputs'][0])"]
  outputs: ["${working_dir}/${export_file}.final.rpkm"]
  fake_input: ${working_dir}/${export_file}
  cmd_order: ['interpreter', 'exe', 'org', 'fake_input','args']


